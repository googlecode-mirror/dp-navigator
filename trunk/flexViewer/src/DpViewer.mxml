<?xml version="1.0" encoding="utf-8"?>



<!--
DPViewer lit un fichier XML de graphe de Design Patterns et l'affiche à l'écran en permettant d'y naviguer.

Le nom du fichier XML peut être passé en paramètre, sinon par défaut il sera "dps.xml".


-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:ravis="org.un.cava.birdeye.ravis.graphLayout.visual.*"
				creationComplete="application1_creationCompleteHandler(event)" width="100%" height="100%" viewSourceURL="srcview/index.html">
	
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.controls.Label;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import flexlib.scheduling.scheduleClasses.schedule_internal;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			
			import org.un.cava.birdeye.ravis.components.renderers.nodes.RotatedRectNodeRenderer;
			import org.un.cava.birdeye.ravis.components.renderers.nodes.SimpleCircleNodeRenderer;
			import org.un.cava.birdeye.ravis.graphLayout.data.Graph;
			import org.un.cava.birdeye.ravis.graphLayout.data.IGraph;
			import org.un.cava.birdeye.ravis.graphLayout.layout.*;
			import org.un.cava.birdeye.ravis.graphLayout.visual.edgeRenderers.*;
			import org.un.cava.birdeye.ravis.graphLayout.visual.*;
			
			import renderers.edgelabels.mxml.basicEdgeLabelRenderer;
			
			
			
			/* 
			* The following local variables hold various
			* important object references
			*/
			
			// graph datastructure object
			private var graph:IGraph;
			// active layouter
			private var layouter:ILayoutAlgorithm;
			// edge renderer
			private var selectedEdgeRenderer:IEdgeRenderer;
			// root node to start with
			private var startRoot:IVisualNode;
			// this is used to display the number of visible items
			private var itemCount:int = 0;
			// important to ensure we are done with the main initialisation
			private var initDone:Boolean = false;
			
			// path to the page
			public var pagePath:String;
			// root node of the graph
			private var rootId:String;
			
			/**
			 * event handler for HTTPService, does all the remaining required
			 * initialisation
			 * */
			private function initData(x:XML):void {											
				
				/* create and init a graph object with the XML data */
				graph = new org.un.cava.birdeye.ravis.graphLayout.data.Graph("XMLAsDocsGraph",false,x);
				
				/* set the graph in the VGraph object, this automatically
				* initializes the VGraph items; 
				* note: vgraph is the id of the mxml specified VisualGraph component */
				vgraph.graph = graph;
				
				/* set the default layouter type */
				//layouter = new ForceDirectedLayouter(vgraph);
				//layouter = new ConcentricRadialLayouter(vgraph);
				//layouter = new CircularLayouter(vgraph);
				//layouter = new Hyperbolic2DLayouter(vgraph);
				layouter = new HierarchicalLayouter(vgraph);
				//layouter = new ParentCenteredRadialLayouter(vgraph);
				//layouter = new PhylloTreeLayouter(vgraph);
				
				
				vgraph.layouter = layouter;		
				
				/* set autofit */
				layouter.autoFitEnabled = true;
				/*layouter.linkLength = 10;
				
				(layouter as HierarchicalLayouter).enableSiblingSpread =true;
				(layouter as HierarchicalLayouter).siblingSpreadDistance = 30;
				(layouter as HierarchicalLayouter).honorNodeSize = true;
				(layouter as HierarchicalLayouter).interleaveSiblings = true;*/
							
				
				
				/* create and set an EdgeRenderer */
				vgraph.edgeRenderer = new DirectedArrowEdgeRenderer(vgraph.edgeDrawGraphics);
				//vgraph.edgeRenderer = new FlowEdgeRenderer(vgraph.edgeDrawGraphics);
				
				
				/* set the visibility limit options, default 2 
				* a.k.a degrees of separation */
				vgraph.maxVisibleDistance = 2;
				
				
				/* select a root node, most layouters requires a root node
				* Note: Id 1 is referring to node id in the XML file */
				var params:Object = FlexGlobals.topLevelApplication.parameters;
				if(params.hasOwnProperty("rootId")) {
					startRoot = graph.nodeByStringId(params.rootId).vnode;
					vgraph.currentRootVNode = startRoot;
				}
				
				/* set if edge labels should be displayed */
				vgraph.displayEdgeLabels = true;				
				
				/* the following kicks it off .... */				
				initDone = true;
				vgraph.draw();
			}
			
			private function dataXMLHandler(event:ResultEvent):void
			{
				initData(event.result as XML);
			}
			
			private function dataXMLFaultHandler(event:FaultEvent):void
			{
				var l:Label = new Label();
				l.text = "Error xml loading: xml file '"+ dataXML.url +"'not found. It should have been in the same folder as: "+dataXML.rootURL;
				graphCnvs.addChild(l);				
			}	
			
			

			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				var params:Object = FlexGlobals.topLevelApplication.parameters;
				if(params.hasOwnProperty("rootId")) {
					rootId = params.rootId;
				}				
				if(params.hasOwnProperty("pagePath")) {
					pagePath = params.pagePath;
				}
				if(params.hasOwnProperty("xmlPath")) {
					dataXML.url = params.xmlPath;
				} else {
					dataXML.url = "dps.xml";
				}
				dataXML.send();
			}

		]]>
	</mx:Script>					
	
	<mx:Style source="styles/dp.css"/>
	
	<mx:HTTPService id="dataXML" resultFormat="e4x" result="dataXMLHandler(event);" fault="dataXMLFaultHandler(event);" />
		
	<mx:Panel id="main" title="DP Viewer..." width="100%" height="100%" 
			  verticalAlign="middle" horizontalAlign="center" 
			  borderColor="#CCCCCC" paddingBottom="5" horizontalGap="5">
		<mx:Canvas id="graphCnvs" width="100%" height="100%"  >		
			<ravis:VisualGraph id="vgraph" width="100%" height="100%" 
							   left="0" right="0" top="0" bottom="0"
							   backgroundColor="#FFFFFF" alpha="1"
							   itemRenderer="renderers.nodes.mxml.eventNodeRenderer"
							   edgeLabelRenderer="renderers.edgelabels.mxml.basicEdgeLabelRenderer"
							   visibilityLimitActive="true"
							   >
			</ravis:VisualGraph>
			<mx:Label text="Click on 'View' to see the details of a Design Pattern." bottom="26" right="5" />
			<mx:Label text="Double-click on its name to explore its relations." bottom="6" right="5" />
		</mx:Canvas>
	</mx:Panel>
</mx:Application>