Dp:
  actAs: { Timestampable: ~ , Versionable: ~}
  columns:
    name: { type: string(255), notnull: true, unique: true }
    confidence: { type:enum, values:[0,1,2]}
    alias: string()
    picture: string(255)
    synopsis: string()
    context: string()
    problem: string()
    problem_details: string()
    solution: string()
    solution_details: string()
    literature: string()
    notes: string()    
  relations:
    Categories: {class:Category, local:dp_id, foreign:category_id, refClass:DpCategory}
    RelationsOut: {type:many, class:DpRelation, local:id, foreign:source_id, foreignAlias:RelationsIn}

RelationType:
  actAs: { Timestampable: ~ }
  columns:
    name: { type: string(255), notnull: true, unique: true }

DpRelation:
  columns:
    source_id: {type: integer, primary:true}
    target_id: {type: integer, primary:true}
    type_id: {type: integer}
  relations:
    Source: {local:source_id, foreign:id, class:Dp, onDelete: CASCADE}
    Target: {local:target_id, foreign:id, class:Dp, onDelete: CASCADE}
    Type: {local:type_id, foreign:id, class:RelationType, onDelete: CASCADE}

Category:
  actAs: { Timestampable: ~ }
  columns:
    name: { type: string(600), notnull: true }
  relations:
    Dps: {type:many, class: Dp, local:category_id, foreign:dp_id, refClass: DpCategory}

DpCategory:
  columns:
    dp_id: {type: integer, primary:true}
    category_id: {type: integer, primary:true}
  relations:
    Dp: {local:dp_id, foreign:id, class:Dp, onDelete: CASCADE}
    Category: {local:category_id, foreign:id, class:Category, onDelete: CASCADE}